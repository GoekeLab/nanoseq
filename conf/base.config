/*
 * -------------------------------------------------
 *  nf-core/nanoseq Nextflow base config file
 * -------------------------------------------------
 * A 'blank slate' config file, appropriate for general
 * use on most high performace compute environments.
 * Assumes that all software is installed and available
 * on the PATH. Runs in `local` mode - all jobs will be
 * run on the logged in environment.
 */

// Use this flag if using GPUs with Singularity
if (params.guppy_gpu) {
  docker.runOptions      = '--gpus all'
  singularity.runOptions = '--nv'
}

process {

  cpus   = { check_max( 1 * task.attempt, 'cpus' ) }
  memory = { check_max( 7.GB * task.attempt, 'memory' ) }
  time   = { check_max( 4.h * task.attempt, 'time' ) }

  errorStrategy = { task.exitStatus in [143,137,104,134,139] ? 'retry' : 'finish' }
  maxRetries    = 1
  maxErrors     = '-1'

  // Process-specific resource requirements
  withLabel:process_low {
    cpus   = { check_max( 2 * task.attempt, 'cpus' ) }
    memory = { check_max( 14.GB * task.attempt, 'memory' ) }
    time   = { check_max( 6.h * task.attempt, 'time' ) }
  }
  withLabel:process_medium {
    cpus   = { check_max( 6 * task.attempt, 'cpus' ) }
    memory = { check_max( 42.GB * task.attempt, 'memory' ) }
    time   = { check_max( 8.h * task.attempt, 'time' ) }
  }
  withLabel:process_high {
    cpus   = { check_max( 12 * task.attempt, 'cpus' ) }
    memory = { check_max( 84.GB * task.attempt, 'memory' ) }
    time   = { check_max( 72.h * task.attempt, 'time' ) }
  }
  withLabel:process_long {
    time   = { check_max( 20.h * task.attempt, 'time' ) }
  }

  // Process-specific requirements
  withName:GUPPY {
    if (params.guppy_gpu) {
      container = 'genomicpariscentre/guppy-gpu:4.0.14'
      clusterOptions = params.gpu_cluster_options
    } else {
      container = 'genomicpariscentre/guppy:4.0.14'
    }
  }
  withName:PYCOQC {
    container = 'quay.io/biocontainers/pycoqc:2.5.0.21--py_0'
  }
  withName:UCSC_BEDGRAPHTOBIGWIG {
    if ({ task.exitStatus in [255] }) { errorStrategy = 'ignore' }
  }
  withName:UCSC_BED12TOBIGBED {
    if ({ task.exitStatus in [255] }) { errorStrategy = 'ignore' }
  }
  withName:'NANOPOLISH'{
      container = 'quay.io/biocontainers/mulled-v2-47609127678014b991aafdfe3c9141852f17fee7:11970b07a8fd8f9441c3235a979d527c7df52d34-0'
  }
  withName:XPORE_DATAPREP {
    container = 'docker.io/yuukiiwa/xpore:0.0'
  }
  withName:XPORE_DIFFMOD {
    container = 'docker.io/yuukiiwa/xpore:0.0'
  }
  withName:GET_SOFTWARE_VERSIONS {
    cache = false
  }
}
